<%- include('../layouts/userHeader.ejs') %>

<style>
  @media (min-width: 1025px) {
    .h-custom {
      height: 100vh !important;
    }
  }

  .card-registration .select-input.form-control[readonly]:not([disabled]) {
    font-size: 1rem;
    line-height: 2.15;
    padding-left: 0.75em;
    padding-right: 0.75em;
  }

  .card-registration .select-arrow {
    top: 13px;
  }

  .bg-grey {
    background-color: #eae8e8;
  }

  @media (min-width: 992px) {
    .card-registration-2 .bg-grey {
      border-top-right-radius: 16px;
      border-bottom-right-radius: 16px;
    }
  }

  @media (max-width: 991px) {
    .card-registration-2 .bg-grey {
      border-bottom-left-radius: 16px;
      border-bottom-right-radius: 16px;
    }
  }
</style>

<section class="h-100 h-custom" style="background-color: #d2c9ff">
  <div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-12">
        <div
          class="card card-registration card-registration-2"
          style="border-radius: 15px"
        >
          <% if(productCount>0) { %>
          <div class="card-body p-0">
            <div class="row g-0">
              <div class="col-lg-8">
                <div class="p-5">
                  <div
                    class="d-flex justify-content-between align-items-center mb-5"
                  >
                    <h1 class="fw-bold mb-0 text-black">Shopping Cart</h1>
                    <h6 class="mb-0 text-muted">
                      <%= productCount %> products
                    </h6>
                  </div>
                  <hr class="my-4" />
                  <% products.forEach(function (product, index) { %>
                  <div
                    class="row mb-4 d-flex justify-content-between align-items-center"
                  >
                    <div class="col-md-2 col-lg-2 col-xl-2">
                      <img
                        src="../uploads/<%= product.productId.images[0] %>"
                        class="img-fluid rounded-3"
                        alt="parfum"
                      />
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-3">
                      <h6 class="text-muted"></h6>
                      <h6 class="text-black mb-0">
                        <%= product.productId.name %>
                      </h6>
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-2 d-flex">
                      <button
                        class="btn btn-link px-2"
                        onclick="incrementQuantity('<%= product.productId._id %>','<%= cartId %>')"
                      >
                        <i class="fa-sharp fa-light fa-plus"></i>
                      </button>

                      <input
                      id="quantity_<%= cartId %>_<%= product.productId._id %>"
                      min="0"
                      name="quantity"
                      value="<%= product.quantity %>"
                      type="number"
                      class="form-control medium-form-control"
                      onkeydown="return false"
                      onwheel="return false"
                      style="width: 60px;"
                    />
                    <span id="quantity-message-<%= cartId %>_<%= product.productId._id %>"></span>
                    
                      <button class="btn btn-link px-2"  onclick="decrementStock('<%= product.productId._id %>','<%= cartId %>')" >
                        <i class="fas fa-minus"></i>
                      </button>
                    </div>
                    <div class="col-md-3 col-lg-2 col-xl-2 offset-lg-1">
                      <h6 class="mb-0">
                        <p>
                          &#8377;<%= product.productId.price * product.quantity
                          %>
                        </p>
                      </h6>
                    </div>
                    <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                      <a
                        href="/deleteCartItem/<%= product.productId._id %>"
                        class="text-muted"
                        ><i class="fas fa-times"></i
                      ></a>
                    </div>
                  </div>
                  <hr class="my-4" />
                  <% }) %>

                  <div class="pt-5">
                    <h6 class="mb-0">
                      <a href="#!" class="text-body"
                        ><i class="fas fa-long-arrow-alt-left me-2"></i>Back to
                        shop</a
                      >
                    </h6>
                  </div>
                </div>
              </div>

              <div class="col-lg-4 bg-grey">
                <div class="p-5">
                  <form action="/checkout">
                  <h3 class="fw-bold mb-5 mt-2 pt-1">Summary</h3>
                  <hr class="my-4" />

                  <div class="d-flex justify-content-between mb-4">
                    <h5 class="text-uppercase"><%= productCount %> products</h5>
                    <% let totalPrice = 0; %> <% products.forEach(product => {
                    %> <% totalPrice += product.productId.price *
                    product.quantity; %> <% }); %>

                    <h5 id="total-price" class="text-uppercase">
                      <%= totalPrice.toLocaleString('en-IN') %>
                    </h5>
                  </div>

                  <!-- <h5 class="text-uppercase mb-3">Shipping</h5> -->

                  <!-- <div class="mb-4 pb-2">
                    <select class="select">
                      <option value="1">Standard-Delivery- â‚¬5.00</option>
                      <option value="2">Two</option>
                      <option value="3">Three</option>
                      <option value="4">Four</option>
                    </select>
                  </div> -->

                  <!-- <h5 class="text-uppercase mb-3">Give code</h5> -->

                  <!-- <div class="mb-5">
                    <div class="form-outline">
                      <input
                        type="text"
                        id="form3Examplea2"
                        class="form-control form-control-lg"
                      />
                      <label class="form-label" for="form3Examplea2"
                        >Enter your code</label>
                      >
                    </div>
                  </div> -->

                  <hr class="my-4" />

                  <div class="d-flex justify-content-between mb-4">
                    <h5 class="text-uppercase">Total Amount</h5>
                    <% let totalamount = 0; %> <% products.forEach(product => {
                    %> <% totalamount += product.productId.price *
                    product.quantity; %> <% }); %>

                    <h5 id="total-price" class="text-uppercase">
                      <%= totalamount.toLocaleString('en-IN') %>
                    </h5>
                  </div>

                  <button
                    type="submit"
                    class="btn btn-dark btn-block btn-lg"
                    data-mdb-ripple-color="dark"
                  >
                    Checkout
                  </button>

                  </form>
                </div>
              </div>
            </div>
          </div>
          <% } else { %>
          <div class="col-lg-8">
            <div class="p-5">
              <h1>No Products in Cart</h1>
              <a href="/shop"> Go to shop</a>
            </div>
          </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</section>
<script>
 
  function setSubtotal() {
    // Get all product elements in the cart
    const productElements = document.querySelectorAll(".product-item");

    let subtotal = 0;

    // Loop through each product and calculate its total price
    productElements.forEach((productElement) => {
      const priceElement = productElement.querySelector(".product-price");
      const quantityInput = productElement.querySelector(".product-quantity");

      const price = parseFloat(
        priceElement.textContent.replace(/[^0-9.]/g, "")
      );
      const quantity = parseInt(quantityInput.value, 10);

      subtotal += price * quantity;
    });

    // Set the subtotal in the DOM
    const subtotalElement = document.getElementById("subtotal");
    if (subtotalElement) {
      subtotalElement.textContent = subtotal.toLocaleString("en-IN");
    }
  }

   function incrementQuantity(productId, cartId) {
    const quantityInput = document.querySelector(
      `#quantity_${cartId}_${productId}`
    );
    // Create the data object with the payload
    const quantity = parseInt(quantityInput.value);
    console.log(quantity)

    const data = { productId, cartId, quantity };

    // Create the fetch request
    fetch("/incrementQuantity", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then((data) => {
        if (data.success) {
          // Update the DOM with the response data
          const productTotalPriceElement = document.querySelector(
            `#product-total-price-${cartId}`
          );
          if (productTotalPriceElement) {
            productTotalPriceElement.textContent =
              data.total.toLocaleString("en-IN");
          }

          // Update the quantity input value
          quantityInput.value = data.quantity;

          // Show message if the product is out of stock
          const messageElement = document.querySelector(
            `#quantity-message-${cartId}`
          );
          if (messageElement) {
            messageElement.textContent = data.mess;
          }

          // Calculate and update the subtotal
          setSubtotal()
        } else {
          console.log("Error while updating");
        }
      })
      .catch((error) => {
        console.error("Error:", error);
        // Handle error response here
      });
  }

  function decrementStock(productId, cartId) {
    console.log(productId);
    console.log(cartId);

    const quantityInput = document.querySelector(
      `#quantity_${cartId}_${productId}`
    );
    // Create the data object with the payload
    const quantity = parseInt(quantityInput.value);
    console.log(quantity)

    
    const data = { productId, cartId, quantity };

   
    fetch("/decrementQuantity", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then((data) => {
        if (data.success) {
         console.log(data.quantity,'00')
          const productTotalPriceElement = document.querySelector(
            `#product-total-price-${cartId}`
          );
          if (productTotalPriceElement) {
            productTotalPriceElement.textContent =
              data.total.toLocaleString("en-IN");
          }

          
          // stockInput.value = data.stock;
          // console.log(stockInput.value)

          quantityInput.value =data.quantity
          const messageElement = document.querySelector(
            `#stock-message-${cartId}`
          );
          if (messageElement) {
            messageElement.textContent = data.mess;
          }

          
          setSubtotal();
        } else {
          console.log("Error while updating");
        }
      })
      .catch((error) => {
        console.error("Error:", error);
        
      });
  }

  
  function updateTotalAmount() {
    let totalAmount = 0;
    const productElements = document.querySelectorAll(".product-item");
    productElements.forEach((productElement) => {
      const priceElement = productElement.querySelector(".product-price");
      const quantityInput = productElement.querySelector(".product-quantity");

      const price = parseFloat(
        priceElement.textContent.replace(/[^0-9.]/g, "")
      );
      const quantity = parseInt(quantityInput.value, 10);

      totalAmount += price * quantity;
    });

    // Update the total amount in the DOM
    const totalAmountElement = document.getElementById("total-price");
    if (totalAmountElement) {
      totalAmountElement.textContent = totalAmount.toLocaleString("en-IN");
    }
  }
</script>
 <%- include('../layouts/userFooter.ejs') %>
